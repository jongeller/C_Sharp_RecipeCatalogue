<Window x:Class="Cookbook.MainWindow"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="700" Width="900" MinHeight="426" MinWidth="555" SizeChanged="mainWindow_SizeChanged" >

    <!-- Load background image for mainWindow -->
    <Window.Background>
        <ImageBrush ImageSource="Art\MainBG.png" Stretch="UniformToFill"/>
    </Window.Background>

    <!-- Define style for buttons with rounded corners -->
    <Window.Resources>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- Define button in normal state -->
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="Gray" BorderThickness="1">
                                <Border.Background>
                                    <RadialGradientBrush GradientOrigin="0.496,1.052">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                <TranslateTransform X="0.02" Y="0.3"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Offset="1" Color="White"/>
                                        <GradientStop Offset="0.3" Color="HoneyDew"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"></ContentPresenter>
                            </Border>
                        </Grid>
                        <!-- Define button in pressed state -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Color="White" Offset="1"/>
                                            <GradientStop Color="DarkGray" Offset="0.3"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <!-- Layout mainWindow controls -->
    <Grid x:Name="mainGrid">
        <!-- Define the grid -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="12*" MinWidth="70"/>
            <ColumnDefinition Width="12*" MinWidth="70"/>
            <ColumnDefinition Width="22*" MinWidth="70"/>
            <ColumnDefinition Width="30*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="6*" MinHeight="37"/>
            <RowDefinition Height="6*" MinHeight="25"/>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="26*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="15*" MinHeight="70"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>

        <!-- Add controls to grid -->

        <!-- Listboxes and labels -->
        <ListBox x:Name="recipeList" 
                Margin="10,3,0,0" Grid.Column="0" Grid.Row="2" Grid.RowSpan="3" Grid.ColumnSpan="2" 
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" 
                SelectionChanged="ListBox_SelectionChanged" 
                ItemsSource="{Binding}" />

        <TextBlock x:Name="messageText" 
                Margin="10,3,0,0" Grid.Column="0" Grid.Row="2" Grid.RowSpan="3" Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="Wrap" 
                FontSize="14" FontWeight="Medium" Background="White"
                Visibility="Hidden"/>
        
        <TextBlock x:Name="filterText" Text="Show Recipe Type:"
                Margin="5,10,0,2" Grid.Column="0" Grid.Row="5" Height="45"
                HorizontalAlignment="Stretch" VerticalAlignment="Top" TextWrapping="Wrap"
                FontSize="14" FontWeight="Medium" Foreground="White"/>
        
        <ComboBox x:Name="filterCombo" 
                Margin="5,10,0,2" Grid.Column="1" Grid.Row="5" Height="25"
                HorizontalAlignment="Stretch" VerticalAlignment="Top" 
                ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" 
                SelectionChanged="FilterComboBox_SelectionChanged"
                ItemsSource="{Binding}" />

        <Label x:Name="titleLabel" Content="Backrow Cookbook" 
                Margin="0,-14,0,0" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4"  
                HorizontalAlignment="Center" VerticalContentAlignment="Top" 
                FontSize="40" FontWeight="Medium" Foreground="WhiteSmoke" />

        <Label x:Name="descLabel"
                Margin="10,-16,10,0" Grid.Column="0" Grid.Row="1"  Grid.ColumnSpan="4"
                HorizontalAlignment="Center" VerticalContentAlignment="Top" 
                FontSize="28" FontWeight="Medium" Foreground="WhiteSmoke" />

        <ListBox x:Name="ingrediantListBox" 
                Margin="10,3,10,0" Grid.Column="2" Grid.Row="2"  Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" 
                ItemsSource="{Binding}" />

        <TextBox x:Name="recipeStepTextBox" 
                Margin="10,3,10,0" Grid.Column="2" Grid.Row="3"  Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" 
                IsReadOnly="True"/>

        <TextBox x:Name="yieldTextBox"
                Margin="10,3,5,2" Grid.Column="2" Grid.Row="4" Grid.RowSpan="1" Height="22"
                 VerticalAlignment="Top"
                IsReadOnly="True" ScrollViewer.CanContentScroll="False" 
                TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto"   
                Background="White" />
        
        <TextBox x:Name="servingTextBox"
                Margin="10,23,5,2" Grid.Column="2" Grid.Row="4" Grid.RowSpan="2"
                IsReadOnly="True" ScrollViewer.CanContentScroll="False" 
                TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto"   
                Background="White" />

        <TextBox x:Name="commentTextBox" 
                Margin="5,3,10,2" Grid.Column="3" Grid.Row="4" Grid.RowSpan="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="False" 
                IsReadOnly="True"/>
        <!-- coverImage -->
        <Border x:Name="coverImage" Margin="10,3,10,2" Grid.Column="2" Grid.Row="2"  Grid.ColumnSpan="2" Grid.RowSpan="4"  
                BorderThickness="3" BorderBrush="DarkGreen" Visibility="Hidden">
            <Image x:Name="srcImage" Source="Art\cover.jpg" HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill" />
        </Border>
        <!-- Testing - remove for release 
        <Button x:Name="testButton" Content ="Test" 
                Margin="85,0,0,0" Grid.Column="3" Grid.Row="6" Width="45" Height="25"
                HorizontalAlignment="Left" Background="White" 
                Style="{DynamicResource RoundCorner}" 
                Click="testButton_Click" />
        -->

        <!-- Buttons -->
        <Button x:Name="resetButton" Content ="Refresh" 
                Margin="5,50,0,0" Grid.Column="1" Grid.Row="5" Width="65" Height="25"
                HorizontalAlignment="Left" VerticalAlignment="Top" 
                Style="{DynamicResource RoundCorner}" 
                Click="resetButton_Click" />

        <Button x:Name="searchButton" Content="Search" 
                Margin="5,50,0,0" Grid.Column="0" Grid.Row="5" Width="65"  Height="25"
                HorizontalAlignment="Left"  VerticalAlignment="Top"
                Style="{DynamicResource RoundCorner}" 
                Click="SearchButton_Click"/>

        <Button x:Name="addButton" Content="Add" 
                Margin="5,0,5,0" Grid.Column="2" Grid.Row="6" Width="45"  Height="25"
                HorizontalAlignment="Left" 
                Style="{DynamicResource RoundCorner}" 
                Click="AddButton_Click"/>
        
        <Button x:Name="editButton" Content="Edit" 
                Margin="55,0,0,0" Grid.Column="2" Grid.Row="6" Width="45"  Height="25"
                HorizontalAlignment="Left" 
                Style="{DynamicResource RoundCorner}" Visibility="Hidden"
                Click="EditButton_Click"/>

        <Button x:Name="exitButton" Content="Exit" 
                Margin="0,0,10,0" Grid.Column="3" Grid.Row="6" Width="65"  Height="25"
                HorizontalAlignment="Right"   
                Style="{DynamicResource RoundCorner}" 
                Click="exitButton_Click" />
    </Grid>
</Window>
